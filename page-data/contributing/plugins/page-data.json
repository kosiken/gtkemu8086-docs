{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/contributing/plugins","result":{"data":{"mdx":{"id":"44f5e2c5-cf77-5195-a684-e7ce23890af8","excerpt":"The  gtkemu8086  emulator uses the  Libpeas  library to allow developers to provide extended features with plugins. \nthere are already a few that are bundledâ€¦","fields":{"slug":"/contributing/plugins/"},"frontmatter":{"title":"Extending With Plugins","description":"Add new emu8086 emulator features using plugins","image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Extending With Plugins\",\n  \"description\": \"Add new emu8086 emulator features using plugins\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"gtkemu8086\"), \" emulator uses the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://wiki.gnome.org/Projects/Libpeas\"\n  }), \"Libpeas\"), \" library to allow developers to provide extended features with plugins.\\nthere are already a few that are bundled with the software. \"), mdx(\"h2\", {\n    \"id\": \"adding-a-plugin\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#adding-a-plugin\",\n    \"aria-label\": \"adding a plugin permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Adding a plugin\"), mdx(\"p\", null, \"Currently the only supported plugin languages are Python and C, there is no support for Lua. The PluginsBox object is passed to the plugin in development.\\nYou can access the main application window by accessing the window property on the PluginsBox object. Here are some of the public methods on the MainWindow\\nobject\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"win.get_revealer() \", mdx(\"br\", null), \"\\nThis returns the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.gnome.org/gtk3/stable/GtkRevealer.html\"\n  }), \"Revealer\"), \" widget that is seen on the main window, i.e the dock where registers are displayed\\nwhen a program is running\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"win.get_bottom_bar() \", mdx(\"br\", null), \"\\nThis returns the bottombar widget which is of the type \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.gnome.org/gtk3/stable/GtkBox.html\"\n  }), \"GtkBox\")))), mdx(\"p\", null, \"You can go through \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"\\nimport gi\\ngi.require_version('Gtk', '3.0')\\nfrom gi.repository import Gtk, Peas,GObject\\n\\nclass HelloWorldlugin(GObject.Object, Peas.Activatable):\\n\\n    object = GObject.Property(type=GObject.Object)\\n\\n    def __init__(self):\\n        GObject.Object.__init__(self)\\n        \\n    def do_activate(self):\\n        \\n        window = self.object.get_property(\\\"window\\\")\\n        code = window.get_code()        \\n        window = self.object.get_property(\\\"window\\\")\\n        buffer = code.get_buffer()\\n        buffer.set_text('db \\\"Hello World\\\"')\\n        \\n    def do_deactivate(self):\\n        print(\\\"Goodbye\\\")    \\n\\n\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Adding a plugin"}]}},"pageContext":{"slug":"/contributing/plugins/","prev":{"label":"Examples","link":"/features/example"},"next":{"label":"Supported Operations","link":"/contributing/operations"},"githubEditUrl":"https://github.com/kosiken/gtkemu8086-docs/tree/master/src/docs/contributing/plugins.mdx"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}